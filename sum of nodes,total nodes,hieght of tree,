#include<iostream>
using namespace std;
class node{
	public:
	int data;
	node*right;
	node*left;
	node(int d){
		right=NULL;
		left=NULL;
		data=d;
	}
};
node*buildtree(){
	int d;
	cin>>d;
	if(d==-1){
		return NULL;
	}
	node*root=new node(d);
	root->left=buildtree();
	root->right=buildtree();
	return root;
}
//8 10 1 -1 -1 6 4 -1 -1 7 -1 -1 3 -1 14 13 -1 -1 -1
int height(node*root){
	if(root==NULL){
		return 0;
	}
	return max(height(root->left),height(root->right))+1;
}
int sumofnodes(node*root){
	if(root==NULL){
		return 0;
	}
	return sumofnodes(root->left)+sumofnodes(root->right)+root->data;
}
int totalnodes(node*root){
	if(root==NULL){
		return 0;
	}
	return totalnodes(root->left)+totalnodes(root->right)+1;
}
int main(){
    node*root=buildtree();
cout<<height(root)<<endl;
cout<<sumofnodes(root)<<endl;
cout<<totalnodes(root)<<endl;
}
